import numpy as np

# 30개의 카메라 좌표 (x1, y1, z1)
camera_coords = np.array([
    [62.33893, -136.62251, 679.66666],
    [-22.1053, -68.12932, 410.01371],
    [145.34057, -101.98602, 576.01045],
    [181.2995, -82.67732, 630.14894],
    [183.88095, -11.96616, 654.96128],
    [157.76612, 48.13339, 626.64923],
    [257.1526, 68.17004, 675.1253],
    [87.82601, 41.18156, 768.29704],
    [150.35162, 54.81352, 836.59431],
    [286.7566, 72.32713, 784.27403],
    [287.02918, 104.15755, 751.18398],
    [215.59721, 120.47019, 683.75349],
    [213.53931, 85.96109, 699.84132],
    [250.59852, 94.88977, 644.01331],
    [251.81036, 120.80501, 654.94599],
    [163.09873, 113.53889, 736.49304],
    [128.81105, 99.95263, 786.34908],
    [103.823129, 77.48441, 858.28071],
    [108.02427, 106.0858, 768.21988],
    [112.85969, 126.51987, 687.18593],
    [139.27221, 79.52236, 652.46099],
    [176.6341, 103.38689, 622.59243],
    [158.60386, 152.28643, 613.35602],
    [101.4737, 135.31428, 665.09941],
    [128.66502, 100.79487, 630.34301],
    [16.36226, 79.02434, 740.80564],
    [54.59725, -64.04848, 626.41694],
    [-8.62671, 74.50285, 594.68199],
    [21.64838, 141.73683, 548.6513],
    [16.56935, 63.47281, 700.85042]
])

# 30개의 로봇 좌표 (x2, y2, z2)
robot_coords = np.array([
    [91.32, 426.66, 288.56],
    [166.86, 286.88, 288.57],
    [71.79, 289.37, 281.54],
    [131.35, 298.08, 249.97],
    [137.66, 298.82, 174.70],
    [91.50, 286.59, 124.01],
    [191.50, 246.59, 94.02],
    [141.55, 436.28, 94.87],
    [231.55, 436.28, 64.88],
    [288.16, 300.81, 64.88],
    [259.06, 271.58, 42.55],
    [159.06, 271.58, 42.56],
    [173.45, 289.68, 71.80],
    [164.16, 229.28, 76.02],
    [167.20, 227.15, 49.56],
    [161.59, 346.70, 33.74],
    [175.84, 408.83, 33.43],
    [210.98, 480.55, 36.51],
    [142.15, 407.41, 32.73],
    [88.63, 345.68, 34.94],
    [90.05, 311.19, 87.21],
    [93.21, 260.93, 71.97],
    [65.27, 257.54, 27.66],
    [65.27, 337.54, 27.66],
    [64.14, 299.78, 72.08],
    [63.84, 461.00, 62.24],
    [35.52, 380.48, 232.38],
    [-52.35, 378.54, 102.54],
    [-74.07, 312.70, 49.61],
    [41.44, 437.59, 87.29]
])

# 변환 계산 함수
def calculate_transformation(camera_coords, robot_coords):
    camera_centroid = np.mean(camera_coords, axis=0)
    robot_centroid = np.mean(robot_coords, axis=0)
    camera_centered = camera_coords - camera_centroid
    robot_centered = robot_coords - robot_centroid
    H = np.dot(camera_centered.T, robot_centered)
    U, S, Vt = np.linalg.svd(H)
    R = np.dot(Vt.T, U.T)
    if np.linalg.det(R) < 0:
        Vt[-1, :] *= -1
        R = np.dot(Vt.T, U.T)
    T = robot_centroid.T - np.dot(R, camera_centroid.T)
    return R, T

# 회전 행렬과 평행 이동 벡터 계산
R, T = calculate_transformation(camera_coords, robot_coords)

# 새로운 카메라 좌표를 로봇 좌표로 변환하는 함수
def transform_to_robot_coords(camera_point, R, T):
    return np.dot(R, camera_point) + T

# 모든 카메라 좌표를 로봇 좌표로 변환
for i, camera_point in enumerate(camera_coords):
    robot_point = transform_to_robot_coords(camera_point, R, T)
    print(f"Camera Point {i+1}: {camera_point} -> Robot Point: {robot_point}")
